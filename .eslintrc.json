{
    "extends": [
        "eslint:recommended",
        "next/core-web-vitals",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "prettier"
    ],

    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },

    "plugins": [
        "react",
        "@typescript-eslint",
        "simple-import-sort"
    ],
    "settings": {
        "import/resolver": {
            "typescript": {}
        }
    },
    "rules": {
        "sort-imports": "off",
        "import/order": "off",
        "simple-import-sort/imports": "warn",
        "simple-import-sort/exports": "warn",
        "react/jsx-filename-extension": [
            "error",
            {
                "extensions": [".jsx", ".tsx"]
            }
        ],

        "import/extensions": [
            "error",
            "ignorePackages",
            {
                "js": "never",
                "jsx": "never",
                "ts": "never",
                "tsx": "never"
            }
        ],

        "import/no-extraneous-dependencies": [
            "error",
            {
                "devDependencies": ["**/*.test.{jsx,js,tsx,ts}", "**/*.stories.{tsx,mdx}", "*.{js,cjs,mjs,ts}"],
                "optionalDependencies": false,
                "peerDependencies": true
            }
        ],

        "import/prefer-default-export": "off",
        "react/require-default-props": "off",
        "react/function-component-definition": "off",
        "react/jsx-props-no-spreading": "off",
        "react/prop-types": "off",
        "react/destructuring-assignment": "off",
        "arrow-body-style": "off",
        "no-console": "off",
        "no-void": "off",
        "no-shadow": "off",

        "no-implicit-coercion": [
            "error",
            {
                "boolean": true
            }
        ],

        "no-param-reassign": [
            "error",
            {
                "props": false
            }
        ],

        "default-case": "off",
        "consistent-return": "off",
        "default-param-last": "off",
        "react/forbid-prop-types": [
            1,
            {
                "forbid": [],
                "checkContextTypes": true,
                "checkChildContextTypes": true
            }
        ],

        "react/sort-comp": [
            1,
            {
                "order": ["type-annotations", "static-methods", "lifecycle", "everything-else", "render"]
            }
        ],

        "require-yield": "error"
    },

    "overrides": [
        {
            "files": ["**/*.ts", "**/*.tsx"],
            "parser": "@typescript-eslint/parser",
            "parserOptions": {
                "project": ["./tsconfig.json"],
                "jsx": true,
                "useJSXTextNode": false
            },

            "extends": [
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/recommended-requiring-type-checking"
            ],

            "rules": {
                "@typescript-eslint/no-use-before-define": "off",
                "@typescript-eslint/no-namespace": "off",
                "@typescript-eslint/no-empty-function": "off",
                "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
                "@typescript-eslint/no-useless-constructor": "error",
                "@typescript-eslint/restrict-template-expressions": ["error"],
                "@typescript-eslint/no-unused-vars": [
                    "warn",
                    {
                        "ignoreRestSiblings": true,
                        "argsIgnorePattern": "^_"
                    }
                ],

                "@typescript-eslint/prefer-readonly": "error",
                "@typescript-eslint/no-floating-promises": "error",
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "typeLike",
                        "format": null
                    }
                ],

                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "accessibility": "no-public"
                    }
                ],

                "@typescript-eslint/no-unused-expressions": "error",
                "@typescript-eslint/no-shadow": "off",
                "@typescript-eslint/switch-exhaustiveness-check": "error",
                "@typescript-eslint/require-await": "error"
            }
        }
    ]
}
